# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Set_fact for fetch omnia config credentials
  hosts: localhost
  tags: first_layer
  connection: local
  tasks:
    - name: Set dynamic run tags including 'provision'
      when: not config_file_status | default(false) | bool
      ansible.builtin.set_fact:
        omnia_run_tags: "{{ (ansible_run_tags | default([]) + ['provision']) | unique }}"
        cacheable: true

- name: Invoke get_config_credentials.yml
  when: not config_file_status | default(false) | bool
  ansible.builtin.import_playbook: ../utils/credential_utility/get_config_credentials.yml
  tags: first_layer

- name: Include input project directory
  when: not project_dir_status | default(false) | bool
  ansible.builtin.import_playbook: ../utils/include_input_dir.yml
  tags: first_layer

- name: Create provision container group
  when: not provision_group_status | default(false) | bool
  ansible.builtin.import_playbook: ../utils/create_container_group.yml
  tags:
    - always
    - first_layer
  vars:
    omnia_provision_group: true
    omnia_provision_validation: true

- name: Validate discovery parameters
  hosts: omnia_provision
  connection: ssh
  tags:
    - always
    - first_layer
  tasks:
    - name: Validate discovery parameters
      ansible.builtin.include_role:
        name: discovery_validations/common                    # noqa: role-name[path]

- name: Discovery from oim node
  hosts: omnia_provision
  connection: ssh
  tags: first_layer
  tasks:
    - name: Discovery roles of Omnia Infrastructure Manager for provisioning
      ansible.builtin.include_role:
        name: db_operations

    - name: Enter Omnia Infrastructure Manager details in cluster.nodeinfo table
      ansible.builtin.include_role:
        name: "{{ playbook_dir }}/../utils/server_spec_update/roles/network_update"    # noqa: role-name[path]
        tasks_from: add_nic_db.yml
      when: add_network_status

    - name: Configure xcat
      ansible.builtin.include_role:
        name: configure_xcat/common         # noqa: role-name[path]

    - name: Configure synclist
      ansible.builtin.include_role:
        name: configure_synclist     # noqa: role-name[path]

    - name: Discover all nodes
      ansible.builtin.include_role:
        name: discovery_mechanism/oim     # noqa: role-name[path]

- name: Discovery from service nodes
  hosts: service_nodes
  connection: ssh
  tasks:
    - name: Discover all nodes
      ansible.builtin.include_role:
        name: discovery_mechanism/service     # noqa: role-name[path]

- name: Set facts for kernel parameters update
  hosts: all:!localhost:!omnia_provision
  connection: local
  gather_facts: true
  vars_files:
    - "{{ hostvars['localhost']['input_project_dir'] }}/server_spec.yml"
  tags: first_layer
  roles:
    - role: os_update           # noqa: role-name[path]

- name: Update kernel parameters
  hosts: omnia_provision
  connection: ssh
  vars_files:
    - "{{ hostvars['localhost']['input_project_dir'] }}/server_spec.yml"
  tags: first_layer
  tasks:
    - name: Update kernel parameters
      ansible.builtin.include_role:
        name: os_update                   # noqa: role-name[path]
        tasks_from: update_kernel_parameters.yml

- name: Discovery roles of Omnia Infrastructure Manager for provisioning
  hosts: omnia_provision
  connection: ssh
  tags: first_layer
  roles:
    - role: postscripts/common             # noqa: role-name[path]
    - role: configure_os_image/common      # noqa: role-name[path]
    - role: monitor_thread

- name: Update metadata
  hosts: localhost
  connection: local
  tags: first_layer
  roles:
    - role: metadata_update
