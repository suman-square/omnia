# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Create group for mapping with bmc nodes
  ansible.builtin.set_fact:
    mapping_bmc_node_group: "mapping_bmc"

- name: Fetch all node object list
  ansible.builtin.command: "{{ xcat_path }}/lsdef all -i mac"
  changed_when: false
  failed_when: false
  register: node_mac_list

- name: Create node object from mapping_details JSON
  ansible.builtin.shell: >
    {{ xcat_path }}/mkdef -t node "{{ item.hostname.split('.')[0] }}" groups={{ mapping_node_group }},{{ item.roles }},all
    ip="{{ item.admin_ip | trim }}" mac="{{ item.admin_mac | trim }}"
    hostnames="{{ item.hostname | trim }}" serial="{{ item.service_tag | trim }}"
    netboot=xnba arch={{ item.architecture }} -f
  loop: "{{ mapping_details }}"
  changed_when: true
  loop_control:
    label: "{{ item.hostname }}"
  when:
    - item.bmc_ip == ""
    - item.admin_mac | lower not in node_mac_list.stdout | lower


- name: Create node object from mapping_details JSON
  ansible.builtin.shell: >
    {{ xcat_path }}/mkdef -t node "{{ item.hostname.split('.')[0] }}" groups={{ mapping_node_group }},{{ mapping_bmc_node_group }},{{ item.roles }},all
    ip="{{ item.admin_ip | trim }}" bmc="{{ item.bmc_ip | trim }}" mgt=ipmi
    mac="{{ item.admin_mac | trim }}" serial="{{ item.service_tag | trim }}"
    hostnames="{{ item.hostname | trim }}" netboot=xnba arch={{ item.architecture }} -f
  loop: "{{ mapping_details }}"
  changed_when: true
  loop_control:
    label: "{{ item.hostname }}"
  when:
    - item.bmc_ip != ""
    - item.admin_mac | lower not in node_mac_list.stdout | lower
