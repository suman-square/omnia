# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

---

- name: Prepare Kubespray directories
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode }}"
  loop: "{{ kubespray_directories }}"

- name: Check if {{ kubespray_container_name }} is already running and port is occupied # noqa: name[template]
  containers.podman.podman_container_info:
    name: "{{ kubespray_container_name }}"
  register: kubespray_container_info
  failed_when: false

- name: Check if {{ kubespray_ssh_port }} is occupied # noqa: name[template]
  ansible.builtin.wait_for:
    host: localhost
    port: "{{ kubespray_ssh_port }}"
    state: stopped
    timeout: "{{ wait_time }}"
    msg: "{{ kubespray_port_occupied_msg }}"
  register: kubespray_port_check
  failed_when: false
  when: kubespray_container_info.containers | length == 0

- name: Pull the Kubespray image
  containers.podman.podman_image:
    name: "{{ kubespray_image_name }}:{{ kubespray_image_tag }}"
    state: present
  register: image_pull_result

- name: Fail if the Kubespray image pull fails
  ansible.builtin.fail:
    msg: "{{ kubespray_image_pull_fail_msg }}"
  when: image_pull_result.failed

- name: Deploy Kubespray container and check deployment status
  block:
    - name: Deploy the Kubespray container
      containers.podman.podman_container:
        name: "{{ kubespray_container_name }}"
        image: "{{ kubespray_image_name }}:{{ kubespray_image_tag }}"
        state: present
        restart_policy: always
        hostname: "{{ kubespray_container_name }}"
        network_mode: host
        volumes: "{{ kubespray_volumes }}"
        cap_add:
          - AUDIT_WRITE

    - name: Start the Kubespray container
      containers.podman.podman_container:
        name: "{{ kubespray_container_name }}"
        state: started

    - name: Check if Kubespray container is running after deployment
      containers.podman.podman_container_info:
        name: "{{ kubespray_container_name }}"
      register: kubespray_container_status

    - name: Notify user of Kubespray container deployment status
      ansible.builtin.debug:
        msg: "{{ kubespray_container_success_msg }}"
      when:
        - kubespray_container_status.containers | length > 0
        - kubespray_container_status.containers[0].State.Status == 'running'

  rescue:
    - name: Kubespray container deployment failed
      ansible.builtin.fail:
        msg: "{{ kubespray_container_failure_msg }}"
